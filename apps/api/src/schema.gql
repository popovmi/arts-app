# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: String!
  username: String!
  fullName: String!
  role: String!
  active: Boolean!
  createdAt: Date!
  updatedAt: Date!
}

"""Date custom scalar type"""
scalar Date

type PageData {
  count: Float!
  take: Float!
  skip: Float!
}

type UserResponse {
  page: UserTypeConnection!
  pageData: PageData
}

type UserTypeConnection {
  edges: [UserTypeEdge!]
  pageInfo: UserTypePageInfo
}

type UserTypeEdge {
  cursor: String
  node: User
}

type UserTypePageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type LoginResponse {
  user: User!
}

type Query {
  user(id: String!): User!
  users(filter: UserFilterQuery, pagination: ConnectionArgs): UserResponse!
  login(username: String!, password: String!): LoginResponse!
}

input UserFilterQuery {
  AND: [UserFilterQuery!]
  OR: [UserFilterQuery!]
  username: StringFieldOption
  fullName: StringFieldOption
  active: BooleanFieldOption
}

input StringFieldOption {
  is: String
  not: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  notContains: String
  startsWith: String
  notStartsWith: String
  endsWith: String
  notEndsWith: String
}

input BooleanFieldOption {
  is: Boolean
  not: Boolean
}

input ConnectionArgs {
  """Paginate before opaque cursor"""
  before: String

  """Paginate after opaque cursor"""
  after: String

  """Paginate first"""
  first: Float

  """Paginate last"""
  last: Float
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
}

input CreateUserInput {
  username: String!
  fullName: String!
  role: Role!
  active: Boolean!
  password: String!
}

enum Role {
  """Administrator Role"""
  ADMIN

  """Simple user role"""
  USER
}

input UpdateUserInput {
  id: String!
  fullName: String
  role: Role
  active: Boolean
  password: String
}